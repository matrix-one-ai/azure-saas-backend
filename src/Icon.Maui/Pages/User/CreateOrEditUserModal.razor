@inherits ModalBase
<div class="modal fade" id="@ModalId" tabindex="-1" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered">
<div class="modal-content rounded">
<div class="modal-body scroll-y pt-10 pb-10">

<div class="btn btn-sm btn-icon btn-active-color-primary position-absolute" style="top:20px;right:20px" data-bs-dismiss="modal">
    <span class="svg-icon svg-icon-1">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor"></rect>
            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor"></rect>
        </svg>
    </span>
</div>

<div class="card p-0 m-0">
    <div class="card-body d-flex flex-center flex-column p-0 m-0">
        <div class="symbol symbol-65px symbol-circle mb-3">
            <img src="@CreateOrEditUserModel.Photo" alt="photo of user">
        </div>
        <a href="#" class="fs-4 text-gray-800 text-hover-primary fw-bold mb-0">
            @CreateOrEditUserModel.UserName
        </a>
        <div class="fw-semibold text-gray-400 mb-6"> @(CreateOrEditUserModel.FullName)</div>
    </div>
</div>

<EditForm Model="CreateOrEditUserModel" OnValidSubmit="@SaveUser">
    <DataAnnotationsValidator />
    <div class="card shadow-sm p-0 m-0">
        <div class="card-body d-flex flex-column py-10 m-0">
            <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container ">
                <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                    <span class="required">
                        @L("UserName")
                    </span>
                    <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                </label>
                <InputText @bind-Value="CreateOrEditUserModel.UserName" class="form-control form-control-solid"/>
                <ValidationMessage For="@(() => CreateOrEditUserModel.UserName)"/>
            </div>
            <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container min-w-90">
                <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                    <span class="required">
                        @L("Name")
                    </span>
                    <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                </label>
                <InputText @bind-Value="CreateOrEditUserModel.Name" class="form-control form-control-solid"/>
                <ValidationMessage For="@(() => CreateOrEditUserModel.Name)"/>
            </div>
            <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container min-w-90">
                <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                    <span class="required">
                        @L("Surname")
                    </span>
                    <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                </label>
                <InputText @bind-Value="CreateOrEditUserModel.Surname" class="form-control form-control-solid"/>
                <ValidationMessage For="@(() => CreateOrEditUserModel.Surname)"/>
            </div>
            <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container min-w-90">
                <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                    <span class="required">
                        @L("EmailAddress")
                    </span>
                    <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                </label>
                <InputText @bind-Value="CreateOrEditUserModel.EmailAddress" class="form-control form-control-solid"/>
                <ValidationMessage For="@(() => CreateOrEditUserModel.EmailAddress)"/>
            </div>
            <div class="d-flex flex-column fv-row fv-plugins-icon-container min-w-90">
                <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                    <span class="required">
                        @L("PhoneNumber")
                    </span>
                    <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                </label>
                <InputText @bind-Value="CreateOrEditUserModel.PhoneNumber" class="form-control form-control-solid"/>
            </div>
        </div>
    </div>

    <div class="card shadow-sm p-0 m-0 mt-8">
        <div class="card-body d-flex flex-column py-10 m-0">
            <label class="form-check form-switch form-check-custom form-check-solid mb-8">
                <InputCheckbox @bind-Value="CreateOrEditUserModel.SetRandomPassword" class="form-check-input"/>
                <span class="form-check-label fw-semibold text-muted">@L("SetRandomPassword")</span>
            </label>
            @if (!CreateOrEditUserModel.SetRandomPassword)
            {
                <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container min-w-90">
                    <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                        <span class="required">
                            @L("NewPassword")
                        </span>
                        <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                    </label>
                    <InputText @bind-Value="CreateOrEditUserModel.Password" type="password" class="form-control form-control-solid"/>
                    <ValidationMessage For="@(() => CreateOrEditUserModel.Password)"/>
                </div>
                <div class="d-flex flex-column mb-8 fv-row fv-plugins-icon-container min-w-90">
                    <label class="d-flex align-items-center fs-6 fw-semibold mb-2">
                        <span class="required">
                            @L("NewPasswordRepeat")
                        </span>
                        <i class="fas fa-exclamation-circle ms-2 fs-7"></i>
                    </label>
                    <InputText @bind-Value="CreateOrEditUserModel.PasswordRepeat" type="password" class="form-control form-control-solid"/>
                    <ValidationMessage For="@(() => CreateOrEditUserModel.PasswordRepeat)"/>
                </div>
            }

            <label class="form-check form-switch form-check-custom form-check-solid mb-8">
                <InputCheckbox @bind-Value="CreateOrEditUserModel.ShouldChangePasswordOnNextLogin" class="form-check-input"/>
                <span class="form-check-label fw-semibold text-muted">@L("ShouldChangePasswordOnNextLogin")</span>
            </label>
            <label class="form-check form-switch form-check-custom form-check-solid mb-8">
                <InputCheckbox @bind-Value="CreateOrEditUserModel.SendActivationEmail" class="form-check-input"/>
                <span class="form-check-label fw-semibold text-muted">@L("SendActivationEmail")</span>
            </label>
            <label class="form-check form-switch form-check-custom form-check-solid mb-8">
                <InputCheckbox @bind-Value="CreateOrEditUserModel.IsLockoutEnabled" class="form-check-input"/>
                <span class="form-check-label fw-semibold text-muted">@L("IsLockoutEnabled")</span>
            </label>
            <label class="form-check form-switch form-check-custom form-check-solid mb-8">
                <InputCheckbox @bind-Value="@CreateOrEditUserModel.IsActive" class="form-check-input"/>
                <span class="form-check-label fw-semibold text-muted">@L("Active")</span>
            </label>
        </div>
    </div>

    @if (CreateOrEditUserModel.Roles.Length > 0)
    {
        <div class="card shadow-sm p-0 m-0 mt-8">
            <div class="card-header">
                <h3 class="card-title align-items-start flex-column">
                    <span class="card-label fw-bold text-dark">@L("Roles")</span>
                </h3>
            </div>

            <div class="card-body d-flex flex-column py-5 m-0">

                @for (int i = 0; i < CreateOrEditUserModel.Roles.Length; i++)
                {
                    var role = CreateOrEditUserModel.Roles[i];
                    <label class="form-check form-switch form-check-custom form-check-solid @((i < CreateOrEditUserModel.Roles.Length ? "mb-3" : ""))">
                        <InputCheckbox @bind-Value="role.IsAssigned" class="form-check-input w-45px h-30px"/>
                        <span class="form-check-label fw-semibold text-muted">@role.RoleDisplayName</span>
                    </label>
                }
            </div>
        </div>
    }

    @if (CreateOrEditUserModel.SelectedOrganizationUnits.Count > 0)
    {
        <div class="card shadow-sm p-0 m-0 mt-8">
            <div class="card-header">
                <h3 class="card-title align-items-start flex-column">
                    <span class="card-label fw-bold text-dark">@L("OrganizationUnits")</span>
                </h3>
            </div>

            <div class="card-body d-flex flex-column py-5 m-0">

                @for (int i = 0; i < CreateOrEditUserModel.SelectedOrganizationUnits.Count; i++)
                {
                    var ou = CreateOrEditUserModel.SelectedOrganizationUnits[i];
                    <label class="form-check form-switch form-check-custom form-check-solid @((i < (CreateOrEditUserModel.SelectedOrganizationUnits.Count) ? "mb-1" : ""))">
                        <span class="form-check-label fw-semibold w-100 text-start">
                            <span class="text-muted">@OUCodeIntentConverter(ou.Code)</span>
                            @ou.DisplayName
                        </span>
                        <InputCheckbox @bind-Value="ou.IsAssigned" class="form-check-input w-45px h-30px"/>
                    </label>
                }
            </div>
        </div>
    }

    @if (!CreateOrEditUserModel.IsNewUser)
    {
        <div class="card shadow-sm p-0 m-0 mt-8">
            <div class="card-body d-flex flex-column py-10 m-0">
                <div class="row">
                    <div class="col">
                        <label class="fs-6 fw-semibold">
                            @L("EmailConfirm")
                        </label>
                    </div>
                    <div class="col">
                        @if (CreateOrEditUserModel.IsEmailConfirmed)
                        {
                            <span class="badge badge-success ng-tns-c260-35 ng-star-inserted"> @L("Yes") </span>
                        }
                        else
                        {
                            <span class="badge badge-dark ng-tns-c260-35 ng-star-inserted"> @L("No") </span>
                        }
                    </div>
                </div>
                <hr/>
                <div class="row">
                    <div class="col">
                        <span class="fs-6 fw-semibold">
                            @L("CreationTime")
                        </span>
                    </div>
                    <div class="col">
                        @CreateOrEditUserModel.CreationTime.ToShortDateString()
                    </div>
                </div>
            </div>
        </div>
    }

    @if (_isDeleteButtonVisible || _isUnlockButtonVisible)
    {
        <div class="card shadow-sm p-0 m-0 mt-8">
            <div class="card-body d-flex flex-column py-10 m-0">
                <div class="row">
                    <button type="button" class="btn btn-warning col" @onclick="UnlockUser">
                        <span class="indicator-label">@L("Unlock")</span>
                    </button>
                </div>
                <div class="row mt-3">
                    <button type="button" class="btn btn-danger col" @onclick="DeleteUser">
                        <span class="indicator-label">@L("Delete")</span>
                    </button>
                </div>
            </div>
        </div>
    }

    <div class="text-center mt-8">
        <button type="reset" data-dismiss="modal" class="btn btn-light me-3" @onclick="Hide">@L("Cancel")</button>
        <button type="submit" class="btn btn-primary">
            <span class="indicator-label">@L("Save")</span>
        </button>
    </div>
</EditForm>

</div>
</div>
</div>
</div>